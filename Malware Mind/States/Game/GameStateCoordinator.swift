//
//  GameStateCoordinator.swift
//  Malware Mind
//
//  Created by JÃ©ssica Araujo on 31/03/21.
//

import Foundation
import UIKit
import SpriteKit

class GameStateCoordinator: Coordinator {
    
    weak var stateMachine: GameStateMachine?
    
    init(stateMachine: GameStateMachine?) {
        self.stateMachine = stateMachine
    }
    
    func start() {
        print("Error")
    }
    
    func route(to route: GameStateRoute) {
        
        switch route {
        
        case .paused:
            let controller = PauseAlertViewController()
            controller.modalPresentationStyle = .overFullScreen
            controller.modalTransitionStyle = .crossDissolve
            controller.stateMachine = stateMachine
            stateMachine?.controller?.navigationController?.pushViewController(controller, animated: true)
        case .gameOver:
            print("Game Over")
            let controller = GameOverViewController()
            controller.modalPresentationStyle = .overFullScreen
            controller.modalTransitionStyle = .crossDissolve
            controller.stateMachine = stateMachine
            stateMachine?.controller?.navigationController?.pushViewController(controller, animated: true)
        case .gameWon:
            print("Game Won")
            let controller = GameOverViewController()
            controller.gameOverView = GameWonView()
            controller.modalPresentationStyle = .overFullScreen
            controller.modalTransitionStyle = .crossDissolve
            controller.stateMachine = stateMachine
            stateMachine?.controller?.navigationController?.pushViewController(controller, animated: true)
        case .restart:
            print("Restart")
            let gameVC = stateMachine?.gameViewController
            gameVC?.skView.scene?.removeAllActions()
            gameVC?.skView.scene?.removeAllChildren()
            gameVC?.skView.scene?.removeFromParent()
            if let controller = gameVC { addScene(controller: controller) }
        case .resume:
            print("Resume")
            let gameViewController = stateMachine?.gameViewController
            if let scene = gameViewController?.skView.scene as? GameScene {
                scene.isPlaying = true
            }
        }
    }
    
    func addScene(controller: GameViewController) {
        
        let scene = GameScene(size: UIScreen.main.bounds.size)
        scene.stateMachine = stateMachine
        scene.scaleMode = .aspectFill

        controller.skView.showsPhysics = false
        controller.skView.presentScene(scene)
    }
}
