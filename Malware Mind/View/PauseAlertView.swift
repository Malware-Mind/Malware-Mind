//
//  PauseAlertView.swift
//  Malware Mind
//
//  Created by Larissa Uchoa on 22/03/21.
//

import UIKit

class PauseAlertView: UIView {

    let alertBackgroundView = AlertBackgroundView()

    let pauseLabel: UILabel = {
        let label = UILabel()
        label.text = "PAUSA"
        label.font = UIFont(name: "Prototype", size: 20)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        return label
    }()

//    let xButton: UIButton = {
//        let button = UIButton()
//        button.setBackgroundImage(UIImage(systemName: "xmark"), for: .normal)
//        button.tintColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
//        return button
//    }()

    let exitButton: UIButton = {
        let button = UIButton()
        button.setBackgroundImage(UIImage(named: "exitButton"), for: .normal)
        return button
    }()

    let continueButton: UIButton = {
        let button = UIButton()
        button.setBackgroundImage(UIImage(named: "continueButton"), for: .normal)
        return button
    }()
    
    let resetButton: UIButton = {
        let button = UIButton()
        button.setBackgroundImage(UIImage(named: "resetButton"), for: .normal)
        return button
    }()

    let exitLabel: UILabel = {
        let label = UILabel()
        label.text = "Exit"
        label.font = UIFont(name: "Prototype", size: 16)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        return label
    }()

    let continueLabel: UILabel = {
        let label = UILabel()
        label.text = "Continue"
        label.font = UIFont(name: "Prototype", size: 16)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        return label
    }()

    let resetLabel: UILabel = {
        let label = UILabel()
        label.text = "Restart"
        label.font = UIFont(name: "Prototype", size: 16)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        return label
    }()

    override init(frame: CGRect) {
        super.init(frame: frame)
        setupConstraints()
        setupPauseLabelConstraints()
        setupContinueButtonConstraints()
        setupExitButtonConstraints()
        setupResetButtonConstraints()
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func setupConstraints() {
        self.addSubview(alertBackgroundView)
        alertBackgroundView.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            alertBackgroundView.topAnchor.constraint(equalTo: self.topAnchor),
            alertBackgroundView.bottomAnchor.constraint(equalTo: self.bottomAnchor),
            alertBackgroundView.leadingAnchor.constraint(equalTo: self.leadingAnchor),
            alertBackgroundView.trailingAnchor.constraint(equalTo: self.trailingAnchor)
        ])
    }

    func setupPauseLabelConstraints() {
        alertBackgroundView.alertView.addSubview(pauseLabel)
        pauseLabel.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            pauseLabel.centerXAnchor.constraint(equalTo: alertBackgroundView.alertView.centerXAnchor),
            pauseLabel.topAnchor.constraint(equalTo: alertBackgroundView.alertView.topAnchor, constant: 20)
        ])
    }

//    func setupXButtonConstraints() {
//        alertBackgroundView.alertView.addSubview(xButton)
//        xButton.translatesAutoresizingMaskIntoConstraints = false
//        NSLayoutConstraint.activate([
//            xButton.trailingAnchor.constraint(equalTo: alertBackgroundView.alertView.trailingAnchor, constant: 10),
//            xButton.topAnchor.constraint(equalTo: alertBackgroundView.alertView.topAnchor, constant: 20)
//        ])
//    }

    func setupContinueButtonConstraints() {
        alertBackgroundView.alertView.addSubview(continueButton)
        continueButton.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            continueButton.centerXAnchor.constraint(equalTo: alertBackgroundView.alertView.centerXAnchor),
            continueButton.centerYAnchor.constraint(equalTo: alertBackgroundView.alertView.centerYAnchor),
            continueButton.heightAnchor.constraint(equalTo: alertBackgroundView.alertView.heightAnchor, multiplier: 0.30),
            continueButton.widthAnchor.constraint(equalTo: continueButton.heightAnchor, multiplier: 1)
        ])
        setupContinueLabelConstraints()
    }

    func setupContinueLabelConstraints() {
        continueButton.addSubview(continueLabel)
        continueLabel.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            continueLabel.topAnchor.constraint(equalTo: continueButton.bottomAnchor, constant: 8),
            continueLabel.centerXAnchor.constraint(equalTo: continueButton.centerXAnchor)
        ])
    }

    func setupExitButtonConstraints() {
        alertBackgroundView.alertView.addSubview(exitButton)
        exitButton.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            exitButton.trailingAnchor.constraint(equalTo: continueButton.leadingAnchor, constant: -20),
            exitButton.centerYAnchor.constraint(equalTo: alertBackgroundView.alertView.centerYAnchor),
            exitButton.heightAnchor.constraint(equalTo: alertBackgroundView.alertView.heightAnchor, multiplier: 0.30),
            exitButton.widthAnchor.constraint(equalTo: continueButton.heightAnchor, multiplier: 1)
        ])
        setupExitLabelConstraints()
    }

    func setupExitLabelConstraints() {
        exitButton.addSubview(exitLabel)
        exitLabel.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            exitLabel.topAnchor.constraint(equalTo: exitButton.bottomAnchor, constant: 8),
            exitLabel.centerXAnchor.constraint(equalTo: exitButton.centerXAnchor)
        ])
    }

    func setupResetButtonConstraints() {
        alertBackgroundView.alertView.addSubview(resetButton)
        resetButton.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            resetButton.leadingAnchor.constraint(equalTo: continueButton.trailingAnchor, constant: 20),
            resetButton.centerYAnchor.constraint(equalTo: alertBackgroundView.alertView.centerYAnchor),
            resetButton.heightAnchor.constraint(equalTo: alertBackgroundView.alertView.heightAnchor, multiplier: 0.30),
            resetButton.widthAnchor.constraint(equalTo: continueButton.heightAnchor, multiplier: 1)
        ])
        setupResetLabelConstraints()
    }

    func setupResetLabelConstraints() {
        resetButton.addSubview(resetLabel)
        resetLabel.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            resetLabel.topAnchor.constraint(equalTo: resetButton.bottomAnchor, constant: 8),
            resetLabel.centerXAnchor.constraint(equalTo: resetButton.centerXAnchor)
        ])
    }
}
