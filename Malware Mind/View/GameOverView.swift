//
//  GameOverView.swift
//  Malware Mind
//
//  Created by Larissa Uchoa on 06/04/21.
//

import UIKit

class GameOverView: UIView {

    let alertBackgroundView = AlertBackgroundView()
    
    let gameStateLabel: UILabel = {
        let label = UILabel()
        label.text = "Game Over".uppercased()
        label.font = UIFont(name: "Prototype", size: 20)
        label.minimumScaleFactor = 0.2
        label.adjustsFontSizeToFitWidth = true
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
        
    let messageLabel: UILabel = {
        let label = UILabel()
        label.text = "Time's up!"
        label.font = UIFont(name: "Prototype", size: 18)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    let resetButton: UIButton = {
        let button = UIButton()
        button.setBackgroundImage(UIImage(named: "resetButton"), for: .normal)
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()
    
    let exitButton: UIButton = {
        let button = UIButton()
        button.setBackgroundImage(UIImage(named: "exitButton"), for: .normal)
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()

    let resetLabel: UILabel = {
        let label = UILabel()
        label.text = "Restart"
        label.font = UIFont(name: "Prototype", size: 16)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    let exitLabel: UILabel = {
        let label = UILabel()
        label.text = "Exit"
        label.font = UIFont(name: "Prototype", size: 16)
        label.textColor = UIColor(red: 154/255, green: 217/255, blue: 225/255, alpha: 1)
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    override init(frame: CGRect) {
        
        super.init(frame: frame)
        setupView()
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func setupView() {
        
        setupViewElementsHierarchy()
        setupConstraints()
    }
    
    func setupViewElementsHierarchy() {
        
        self.addSubview(alertBackgroundView)
        addSubview(gameStateLabel)
        addSubview(messageLabel)
        addSubview(resetButton)
        addSubview(resetLabel)
        addSubview(exitButton)
        addSubview(exitLabel)
    }
    
    func setupConstraints() {
        
        alertBackgroundView.translatesAutoresizingMaskIntoConstraints = false
        
        NSLayoutConstraint.activate([
            
            alertBackgroundView.topAnchor.constraint(equalTo: self.topAnchor),
            alertBackgroundView.bottomAnchor.constraint(equalTo: self.bottomAnchor),
            alertBackgroundView.leadingAnchor.constraint(equalTo: self.leadingAnchor),
            alertBackgroundView.trailingAnchor.constraint(equalTo: self.trailingAnchor),
            
            gameStateLabel.centerXAnchor.constraint(equalTo: alertBackgroundView.alertView.centerXAnchor),
            gameStateLabel.topAnchor.constraint(equalTo: alertBackgroundView.alertView.topAnchor, constant: 20),
            
            messageLabel.centerXAnchor.constraint(equalTo: alertBackgroundView.alertView.centerXAnchor),
            messageLabel.topAnchor.constraint(equalTo: gameStateLabel.bottomAnchor, constant: 15),
            
            exitButton.trailingAnchor.constraint(equalTo: alertBackgroundView.alertView.trailingAnchor, constant: -40),
            exitButton.topAnchor.constraint(equalTo: messageLabel.bottomAnchor, constant: 15),
            exitButton.heightAnchor.constraint(equalTo: alertBackgroundView.alertView.heightAnchor, multiplier: 0.30),
            exitButton.widthAnchor.constraint(equalTo: exitButton.heightAnchor, multiplier: 1),
            
            exitLabel.topAnchor.constraint(equalTo: exitButton.bottomAnchor, constant: 8),
            exitLabel.centerXAnchor.constraint(equalTo: exitButton.centerXAnchor),
            
            resetButton.leadingAnchor.constraint(equalTo: alertBackgroundView.alertView.leadingAnchor, constant: 40),
            resetButton.topAnchor.constraint(equalTo: messageLabel.bottomAnchor, constant: 15),
            resetButton.heightAnchor.constraint(equalTo: alertBackgroundView.alertView.heightAnchor, multiplier: 0.30),
            resetButton.widthAnchor.constraint(equalTo: exitButton.heightAnchor, multiplier: 1),
            
            resetLabel.topAnchor.constraint(equalTo: resetButton.bottomAnchor, constant: 8),
            resetLabel.centerXAnchor.constraint(equalTo: resetButton.centerXAnchor)
            
        ])
    }

}
