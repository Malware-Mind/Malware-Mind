//
//  MenuView.swift
//  Malware Mind
//
//  Created by JÃ©ssica Araujo on 22/03/21.
//

import UIKit

class MenuView: UIView {
    
    // MARK: - Elements
    
    let circuitsBackgroundImageView : UIImageView = {
        
        let imageView = UIImageView()
        imageView.translatesAutoresizingMaskIntoConstraints = false
        imageView.contentMode = .scaleAspectFit
        imageView.image = UIImage(named: "circuitsBackground")
        return imageView
    }()
    
    let titleLabel : UILabel = {
        
        let label = UILabel()
        label.translatesAutoresizingMaskIntoConstraints = false
        label.font = UIFont(name: "DebugFreeTrial", size: 73)
        label.textColor = .morningGloryColor
        label.textAlignment = .center
        label.text = "Malware Mind"
        label.numberOfLines = 0
        return label
    }()
    
    let playButton : UIButton = {
        
        let button = UIButton()
        button.translatesAutoresizingMaskIntoConstraints = false
        button.setTitle("Play".uppercased(), for: .normal)
        button.titleLabel?.font = UIFont(name: "Prototype", size: 25)
        button.setTitleColor(.actionColor, for: .normal)
        button.setBackgroundImage(UIImage(named: "playButton"), for: .normal)
        return button
    }()
    
    let wikiButton : UIButton = {
        
        let button = UIButton()
        button.translatesAutoresizingMaskIntoConstraints = false
        button.setBackgroundImage(UIImage(named: "wikiButton"), for: .normal)
        return button
    }()
    
    let settingsButton : UIButton = {
        
        let button = UIButton()
        button.translatesAutoresizingMaskIntoConstraints = false
        button.setBackgroundImage(UIImage(named: "settingsButton"), for: .normal)
        return button
    }()
    
    override init(frame: CGRect) {
        
        super.init(frame: frame)
        setup()
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    private func setup() {
        
        self.backgroundColor = .backgroundColor
        setupViewElementsHierarchy()
        setViewElementsConstraints()
    }
    
    private func setupViewElementsHierarchy() {
        
        addSubview(circuitsBackgroundImageView)
        addSubview(titleLabel)
        addSubview(playButton)
        addSubview(wikiButton)
        addSubview(settingsButton)
    }
    
    private func setViewElementsConstraints() {
        
        NSLayoutConstraint.activate([
            
            circuitsBackgroundImageView.heightAnchor.constraint(equalToConstant: 174),
            circuitsBackgroundImageView.topAnchor.constraint(equalTo: self.topAnchor),
            circuitsBackgroundImageView.leadingAnchor.constraint(equalTo: self.leadingAnchor),
            circuitsBackgroundImageView.trailingAnchor.constraint(equalTo: self.trailingAnchor),
            
            titleLabel.leadingAnchor.constraint(equalTo: self.leadingAnchor, constant: 5),
            titleLabel.trailingAnchor.constraint(equalTo: self.trailingAnchor, constant: -5),
            titleLabel.topAnchor.constraint(equalTo: circuitsBackgroundImageView.bottomAnchor, constant: 15),
            titleLabel.heightAnchor.constraint(equalToConstant: 100),
            
            playButton.leadingAnchor.constraint(equalTo: self.leadingAnchor, constant: 70),
            playButton.trailingAnchor.constraint(equalTo: self.trailingAnchor, constant: -70),
            playButton.topAnchor.constraint(equalTo: titleLabel.bottomAnchor, constant: 70),
            playButton.heightAnchor.constraint(equalToConstant: 65),
            
            wikiButton.leadingAnchor.constraint(equalTo: self.leadingAnchor, constant: 25),
            wikiButton.bottomAnchor.constraint(equalTo: self.bottomAnchor, constant: -25),
            wikiButton.heightAnchor.constraint(equalToConstant: 50),
            wikiButton.widthAnchor.constraint(equalToConstant: 45),
            
            settingsButton.trailingAnchor.constraint(equalTo: self.trailingAnchor, constant: -25),
            settingsButton.bottomAnchor.constraint(equalTo: self.bottomAnchor, constant: -25),
            settingsButton.heightAnchor.constraint(equalToConstant: 50),
            settingsButton.widthAnchor.constraint(equalToConstant: 45)
        ])
    }
}
