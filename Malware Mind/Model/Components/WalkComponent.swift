//
//  WalkComponent.swift
//  Malware Mind
//
//  Created by JÃ©ssica Araujo on 16/03/21.
//

import Foundation
import GameplayKit

class WalkComponent: GKComponent {

    var direction: Movements = .none
    var velocity: CGFloat

    var spriteNode: SKSpriteNode? {
        self.entity?.component(ofType: AnimatedSpriteComponent.self)?.spriteNode
    }

    init(velocity: CGFloat = 20) {
        self.velocity = velocity
        super.init()
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func walk(direction: Movements) {
        self.direction = direction
        let stepSize = 35

        switch self.direction {
        case .up:
            spriteNode?.yScale = 1
            spriteNode?.run(SKAction.move(by: CGVector(dx: 0, dy: stepSize), duration: 0.5))
        case .down:
            spriteNode?.yScale = 1
            spriteNode?.run(SKAction.move(by: CGVector(dx: 0, dy: -stepSize), duration: 0.5))
        case .left:
            spriteNode?.xScale = 1
            spriteNode?.run(SKAction.move(by: CGVector(dx: -stepSize, dy: 0), duration: 0.5))
        case .right:
            spriteNode?.xScale = 1
            spriteNode?.run(SKAction.move(by: CGVector(dx: stepSize, dy: 0), duration: 0.5))
        default:
            break
        }
    }

}
