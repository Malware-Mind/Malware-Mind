//
//  PlayerControlComponent.swift
//  Malware Mind
//
//  Created by Larissa Uchoa on 16/03/21.
//

import Foundation
import GameplayKit

class PlayerControlComponent: GKComponent {

    var stateMachine: GKStateMachine

    init(states: [GKState]) {
        self.stateMachine = GKStateMachine(states: states)
        super.init()
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func handle(direction: Movements) {
        switch direction {
        case .right: moveRight()
        case .left: moveLeft()
        case .up: moveUp()
        case .down: moveDown()

        default: break
        }
    }
    
    func handleAnimation(direction: Movements) {
        print(direction)
        switch direction {
        case .right:
            setRightAnimationAttack()
        case .left:
            setLeftAnimationAttack()
        default:
            break
        }
    }

    private func moveLeft() {
        stateMachine.enter(WalkLeftState.self)
    }

    private func moveRight() {
        stateMachine.enter(WalkRightState.self)
    }

    private func moveUp() {
        stateMachine.enter(WalkUpState.self)
    }

    private func moveDown() {
        stateMachine.enter(WalkDownState.self)
    }
    
    private func setLeftAnimationAttack() {
        print("set animation right")
        stateMachine.enter(AttackLeftState.self)
    }
    
    private func setRightAnimationAttack() {
        stateMachine.enter(AttackRightState.self)
    }
}
