//
//  CollectableComponent.swift
//  Malware Mind
//
//  Created by JÃ©ssica Araujo on 09/04/21.
//

import Foundation
import GameplayKit

class CollectableComponent: GKComponent {

    var stateMachine: GKStateMachine

    init(states: [GKState]) {
        self.stateMachine = GKStateMachine(states: states)
        super.init()
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    func handle(state: StateCollectable) {
        switch state {
        case .lost: setLostState()
        case .uncollected: setCollectedState()
        case .collected: setUncollectedState()

        default: break
        }
    }

    private func setLostState() {
        stateMachine.enter(LostState.self)
    }

    private func setCollectedState() {
        //stateMachine.enter(WalkRightState.self)
    }

    private func setUncollectedState() {
        //stateMachine.enter(WalkUpState.self)
    }
}
