//
//  GameScene.swift
//  Malware Mind
//
//  Created by JÃ©ssica Araujo on 15/03/21.
//

import Foundation
import SpriteKit
import GameplayKit

enum Movements: String {
    case up = "upNode"
    case down = "downNode"
    case left = "leftNode"
    case right = "rightNode"
    case none
}

class GameScene: SKScene {
    
    //MARK: - Entities
    let antivirus = Antivirus()
    //MARK: - Control Components
    var controlComponent: PlayerControlComponent? {
        antivirus.component(ofType: PlayerControlComponent.self)
    }

    private var previousUpdateTime: TimeInterval = TimeInterval()
    //MARK: - Gestures
    //MARK: - SKScene Life-Cycle

    override func didMove(to view: SKView) {
        self.backgroundColor = .white
        self.setupNodesPosition()
    }
    //MARK: - Adding Nodes to Scene

    func setupNodesPosition() {
        guard let antivirusSpriteNode = antivirus.component(ofType: AnimatedSpriteComponent.self)?.spriteNode else { return }

        guard let tileSet = SKTileSet(named: "Background") else {
            //hint: don't use the filename for named, use the tileset inside
            fatalError()
        }
        antivirusSpriteNode.size = CGSize(width: 45, height: 60)

        let tileSize = CGSize(width: 40, height: 40) //from image size
        let tileMap = SKTileMapNode(tileSet: tileSet, columns: 7, rows: 11, tileSize: tileSize)
        let tileGroup = tileSet.tileGroups.first
        tileMap.fill(with: tileGroup)

        tileMap.position = CGPoint(x: self.frame.midX, y: self.frame.midY+30)
        antivirusSpriteNode.position = CGPoint(x: tileMap.frame.midX, y: tileMap.frame.midY-20)

        self.addChild(tileMap)
        self.addChild(antivirusSpriteNode)
        addDpadButton()
    }

    private func addDpadButton() {

        let dPadButton = SKSpriteNode(imageNamed: "dpadButton")
        dPadButton.size = CGSize(width: 107, height: 103)
        dPadButton.position = CGPoint(x: self.frame.minX+60, y: self.frame.minY+60)
        addChild(dPadButton)

        let upNode = SKSpriteNode(imageNamed: "upButton")
        upNode.size = CGSize(width: 14, height: 12)
        upNode.position = CGPoint(x: dPadButton.frame.midX, y: dPadButton.frame.midY+40)
        upNode.name = "upNode"
        addChild(upNode)

        let downNode = SKSpriteNode(imageNamed: "upButton")
        downNode.size = CGSize(width: 14, height: 12)
        downNode.position = CGPoint(x: dPadButton.frame.midX, y: dPadButton.frame.midY-40)
        downNode.name = "downNode"
        addChild(downNode)

        let leftNode = SKSpriteNode(imageNamed: "upButton")
        leftNode.size = CGSize(width: 14, height: 12)
        leftNode.position = CGPoint(x: dPadButton.frame.midX-40, y: dPadButton.frame.midY)
        leftNode.name = "leftNode"
        addChild(leftNode)

        let rightNode = SKSpriteNode(imageNamed: "upButton")
        rightNode.size = CGSize(width: 14, height: 12)
        rightNode.position = CGPoint(x: dPadButton.frame.midX+40, y: dPadButton.frame.midY)
        rightNode.name = "rightNode"
        addChild(rightNode)
    }

    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {

        guard let touch = touches.first else { return }
        let location = touch.location(in: self)
        let tappedNodes = nodes(at: location)

        for node in tappedNodes {
            switch node.name {
            case Movements.up.rawValue:
                controlComponent?.handle(direction: .up)
            case Movements.down.rawValue:
                controlComponent?.handle(direction: .down)
            case Movements.left.rawValue:
                controlComponent?.handle(direction: .left)
            case Movements.right.rawValue:
                controlComponent?.handle(direction: .right)
            default:
                print("none")
            }
        }
    }
}
