//
//  GameScene.swift
//  Malware Mind
//
//  Created by JÃ©ssica Araujo on 15/03/21.
//

import Foundation
import SpriteKit
import GameplayKit

enum Movements: String {
    case up = "upNode"
    case down = "downNode"
    case left = "leftNode"
    case right = "rightNode"
    case none
}

class GameScene: SKScene, SKPhysicsContactDelegate {
    
    // MARK: - Entities
    let antivirus = Antivirus()
    let background = Background()
    
    // MARK: - Control Components
    var controlComponent: PlayerControlComponent? {
        antivirus.component(ofType: PlayerControlComponent.self)
    }

    private var previousUpdateTime: TimeInterval = TimeInterval()
    // MARK: - Gestures
    // MARK: - SKScene Life-Cycle

    override func didMove(to view: SKView) {
        self.backgroundColor = .white
        self.setupNodesPosition()
        physicsWorld.contactDelegate = self
    }
    // MARK: - Adding Nodes to Scene

    func setupNodesPosition() {
        
        guard let antivirusSpriteNode = antivirus.component(ofType: AnimatedSpriteComponent.self)?.spriteNode else { return }
        
        guard let backgroundNode = background.tileMap else { return }
        
        antivirusSpriteNode.size = CGSize(width: 45, height: 60)
        antivirusSpriteNode.name = "antivirus"
        antivirusSpriteNode.physicsBody = SKPhysicsBody(rectangleOf: CGSize(width: antivirusSpriteNode.size.width, height: antivirusSpriteNode.size.height))
        antivirusSpriteNode.physicsBody?.isDynamic = false
        antivirusSpriteNode.physicsBody?.usesPreciseCollisionDetection = true
        antivirusSpriteNode.physicsBody!.contactTestBitMask = antivirusSpriteNode.physicsBody!.collisionBitMask
        
        backgroundNode.position = CGPoint(x: self.frame.midX, y: self.frame.midY+30)
        
        antivirusSpriteNode.position = CGPoint(x: backgroundNode.frame.midX, y: backgroundNode.frame.midY-20)
                
        self.addChild(backgroundNode)
        addDpadButtonNode()
        addAttackButtonNode()
        addWallNodes()
        self.addChild(antivirusSpriteNode)
        
    }

    private func addDpadButtonNode() {
        
        guard let backgroundNode = background.tileMap else { return }
        
        let dPadButton = SKSpriteNode(imageNamed: "dpadButton")
        dPadButton.size = CGSize(width: 107, height: 103)
        dPadButton.position = CGPoint(x: backgroundNode.frame.minX+20, y: backgroundNode.frame.minY-80)
        addChild(dPadButton)

        let upNode = SKSpriteNode(imageNamed: "upButton")
        upNode.size = CGSize(width: 14, height: 12)
        upNode.position = CGPoint(x: dPadButton.frame.midX, y: dPadButton.frame.midY+40)
        upNode.name = "upNode"
        addChild(upNode)

        let downNode = SKSpriteNode(imageNamed: "upButton")
        downNode.size = CGSize(width: 14, height: 12)
        downNode.position = CGPoint(x: dPadButton.frame.midX, y: dPadButton.frame.midY-40)
        downNode.name = "downNode"
        addChild(downNode)

        let leftNode = SKSpriteNode(imageNamed: "upButton")
        leftNode.size = CGSize(width: 14, height: 12)
        leftNode.position = CGPoint(x: dPadButton.frame.midX-40, y: dPadButton.frame.midY)
        leftNode.name = "leftNode"
        addChild(leftNode)

        let rightNode = SKSpriteNode(imageNamed: "upButton")
        rightNode.size = CGSize(width: 14, height: 12)
        rightNode.position = CGPoint(x: dPadButton.frame.midX+40, y: dPadButton.frame.midY)
        rightNode.name = "rightNode"
        addChild(rightNode)
    }
    
    private func addAttackButtonNode() {
        
        guard let backgroundNode = background.tileMap else { return }
        
        let attackButton = SKSpriteNode(imageNamed: "attackButton")
        attackButton.size = CGSize(width: 80, height: 80)
        attackButton.position = CGPoint(x: backgroundNode.frame.maxX-20, y: backgroundNode.frame.minY-80)
        attackButton.name = "attackNode"
        addChild(attackButton)
        
    }
    
    private func addWallNodes() {
        
        guard let backgroundNode = background.tileMap else { return }
        
        let topWallNode = SKSpriteNode(imageNamed: "topWall")
        topWallNode.size = CGSize(width: 352, height: 50)
        topWallNode.position = CGPoint(x: backgroundNode.frame.midX+2, y: backgroundNode.frame.maxY+12)
        topWallNode.name = "topWall"

        topWallNode.physicsBody = SKPhysicsBody(rectangleOf: CGSize(width: topWallNode.size.width, height: topWallNode.size.height))
        topWallNode.physicsBody?.isDynamic = false
        topWallNode.physicsBody?.usesPreciseCollisionDetection = true
        topWallNode.physicsBody!.contactTestBitMask = topWallNode.physicsBody!.collisionBitMask

        addChild(topWallNode)
    }

    func didBegin(_ contact: SKPhysicsContact) {

    }

    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {

        guard let touch = touches.first else { return }
        let location = touch.location(in: self)
        let tappedNodes = nodes(at: location)

        for node in tappedNodes {
            switch node.name {
            case Movements.up.rawValue:
                controlComponent?.handle(direction: .up)
            case Movements.down.rawValue:
                controlComponent?.handle(direction: .down)
            case Movements.left.rawValue:
                controlComponent?.handle(direction: .left)
            case Movements.right.rawValue:
                controlComponent?.handle(direction: .right)
            case "attackNode":
                print("attacking you")
                controlComponent?.attack()
            case "wall":
                print("hitting the wall")
            default:
                print("none")
            }
        }
    }
}
